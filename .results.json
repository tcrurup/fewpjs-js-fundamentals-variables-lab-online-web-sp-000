{
  "stats": {
    "suites": 4,
    "tests": 8,
    "passes": 4,
    "pending": 0,
    "failures": 4,
    "start": "2019-09-30T22:33:46.817Z",
    "end": "2019-09-30T22:33:47.449Z",
    "duration": 632
  },
  "tests": [
    {
      "title": "is set as Scuber",
      "fullTitle": "index.js companyName is set as Scuber",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: companyName is not defined\n    at Context.<anonymous> (test/indexTest.js:11:14)",
        "message": "companyName is not defined"
      }
    },
    {
      "title": "is defined as a const",
      "fullTitle": "index.js companyName is defined as a const",
      "duration": 3,
      "currentRetry": 0,
      "err": {
        "message": "Expected companyName to be a const: expected '// Code your solution in this file!\\n\\n' to match /const companyName/",
        "showDiff": false,
        "actual": "// Code your solution in this file!\n\n",
        "stack": "AssertionError: Expected companyName to be a const: expected '// Code your solution in this file!\\n\\n' to match /const companyName/\n    at Context.<anonymous> (test/indexTest.js:15:21)"
      }
    },
    {
      "title": "is declared as equal to Chelsea",
      "fullTitle": "index.js mostProfitableNeighborhood is declared as equal to Chelsea",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: mostProfitableNeighborhood is not defined\n    at Context.<anonymous> (test/indexTest.js:21:14)",
        "message": "mostProfitableNeighborhood is not defined"
      }
    },
    {
      "title": "does not raise error if the mostProfitableNeighborhood is changed",
      "fullTitle": "index.js mostProfitableNeighborhood does not raise error if the mostProfitableNeighborhood is changed",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is not defined as a const",
      "fullTitle": "index.js mostProfitableNeighborhood is not defined as a const",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is declared as equal to Susan Smith",
      "fullTitle": "index.js companyCeo is declared as equal to Susan Smith",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: companyCeo is not defined\n    at Context.<anonymous> (test/indexTest.js:35:14)",
        "message": "companyCeo is not defined"
      }
    },
    {
      "title": "does not raise error if the companyCeo is changed",
      "fullTitle": "index.js companyCeo does not raise error if the companyCeo is changed",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is not defined as a const",
      "fullTitle": "index.js companyCeo is not defined as a const",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "is set as Scuber",
      "fullTitle": "index.js companyName is set as Scuber",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: companyName is not defined\n    at Context.<anonymous> (test/indexTest.js:11:14)",
        "message": "companyName is not defined"
      }
    },
    {
      "title": "is defined as a const",
      "fullTitle": "index.js companyName is defined as a const",
      "duration": 3,
      "currentRetry": 0,
      "err": {
        "message": "Expected companyName to be a const: expected '// Code your solution in this file!\\n\\n' to match /const companyName/",
        "showDiff": false,
        "actual": "// Code your solution in this file!\n\n",
        "stack": "AssertionError: Expected companyName to be a const: expected '// Code your solution in this file!\\n\\n' to match /const companyName/\n    at Context.<anonymous> (test/indexTest.js:15:21)"
      }
    },
    {
      "title": "is declared as equal to Chelsea",
      "fullTitle": "index.js mostProfitableNeighborhood is declared as equal to Chelsea",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: mostProfitableNeighborhood is not defined\n    at Context.<anonymous> (test/indexTest.js:21:14)",
        "message": "mostProfitableNeighborhood is not defined"
      }
    },
    {
      "title": "is declared as equal to Susan Smith",
      "fullTitle": "index.js companyCeo is declared as equal to Susan Smith",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: companyCeo is not defined\n    at Context.<anonymous> (test/indexTest.js:35:14)",
        "message": "companyCeo is not defined"
      }
    }
  ],
  "passes": [
    {
      "title": "does not raise error if the mostProfitableNeighborhood is changed",
      "fullTitle": "index.js mostProfitableNeighborhood does not raise error if the mostProfitableNeighborhood is changed",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is not defined as a const",
      "fullTitle": "index.js mostProfitableNeighborhood is not defined as a const",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "does not raise error if the companyCeo is changed",
      "fullTitle": "index.js companyCeo does not raise error if the companyCeo is changed",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "is not defined as a const",
      "fullTitle": "index.js companyCeo is not defined as a const",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}